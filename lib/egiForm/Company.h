//
// 
// PLEASE DO NOT EDIT THIS FILE. AUTO-GENERATED.
//



#define COMPANY_COMPANYSYMBOL_MIN 0
#define COMPANY_COMPANYSYMBOL_MAX 5
#define COMPANY_COMPANYSYMBOL_DEFAULT  "S&P"
#define COMPANY_COMPANYSYMBOL_VALID_FLAG   (0x1 << 0)
#define COMPANY_COMPANYSYMBOL_RANGE_ERROR 311

#define COMPANY_COMPANYNAME_MIN 0
#define COMPANY_COMPANYNAME_MAX 255
#define COMPANY_COMPANYNAME_DEFAULT  ""
#define COMPANY_COMPANYNAME_VALID_FLAG   (0x1 << 1)
#define COMPANY_COMPANYNAME_RANGE_ERROR 312

#define COMPANY_MARKETVALUE_MIN 0
#define COMPANY_MARKETVALUE_MAX 100000
#define COMPANY_MARKETVALUE_DEFAULT 0
#define COMPANY_MARKETVALUE_VALID_FLAG   (0x1 << 2)
#define COMPANY_MARKETVALUE_RANGE_ERROR 313

#define COMPANY_CEO_MIN 0
#define COMPANY_CEO_MAX 255
#define COMPANY_CEO_DEFAULT  ""
#define COMPANY_CEO_VALID_FLAG   (0x1 << 3)
#define COMPANY_CEO_RANGE_ERROR 314

#define COMPANY_INDUSTRY_MIN 0
#define COMPANY_INDUSTRY_MAX 255
#define COMPANY_INDUSTRY_DEFAULT  ""
#define COMPANY_INDUSTRY_VALID_FLAG   (0x1 << 4)
#define COMPANY_INDUSTRY_RANGE_ERROR 315            

class Company {

public:

    Company();
   ~Company();

    
	std::string companySymbol;
	std::string companyName;
	int MarketValue;
	std::string CEO;
	std::string industry;
    
	std::string db_create_stmt();
	void db_create_stmt_pre();
	std::string db_insert_stmt();
	void db_insert_stmt_pre();
	std::string db_update_stmt( const std::string key);
	void db_update_stmt_pre();
	std::string db_select_stmt( const std::vector<std::string> );
	void db_select_stmt_pre();
	std::string db_delete_stmt( const std::string key);
	void db_delete_stmt_pre();
	void SET_VALID_BIT_COMPANYSYMBOL();
	void SET_VALID_BIT_COMPANYNAME();
	void SET_VALID_BIT_MARKETVALUE();
	void SET_VALID_BIT_CEO();
	void SET_VALID_BIT_INDUSTRY();
	int rangeCheck( ) { /* not implemented */ return 300; }

private:
    
	unsigned int valid;
    
};

