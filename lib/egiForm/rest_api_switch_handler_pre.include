//
// 
// PLEASE DO NOT EDIT THIS FILE. AUTO-GENERATED.
//


	case PORTFOLIO_SELECT : 
        {
            if ( JsonReq.isMember("keys") ) {
                Json::Value JsonKeyArray = JsonReq.get("keys",0);
                if ( JsonKeyArray.size() > 0 ) 
                    for(unsigned int i=0; i < JsonKeyArray.size(); ++i) 
                        primaryKey.push_back( JsonKeyArray[i].asString() );
            }
        }

		break; 
	case PORTFOLIO_INSERT :  
	case PORTFOLIO_UPDATE :  
	case PORTFOLIO_DELETE :  { 
		/* extract value from Json::Value */
		Portfolio portfolio_instance;
		if ( JsonReq.isMember("companySymbol") ) {
			portfolio_instance.companySymbol = JsonReq.get("companySymbol", "S&P").asString();
			portfolio_instance.SET_VALID_BIT_COMPANYSYMBOL();
		}

		if ( JsonReq.isMember("companyName") ) {
			portfolio_instance.companyName = JsonReq.get("companyName", "").asString();
			portfolio_instance.SET_VALID_BIT_COMPANYNAME();
		}

		if ( JsonReq.isMember("lastTradePriceOnly") ) {
			portfolio_instance.lastTradePriceOnly = JsonReq.get("lastTradePriceOnly", 0 ).asInt();
			portfolio_instance.SET_VALID_BIT_LASTTRADEPRICEONLY();
		}

		if ( JsonReq.isMember("change") ) {
			portfolio_instance.change = JsonReq.get("change", 0 ).asInt();
			portfolio_instance.SET_VALID_BIT_CHANGE();
		}

		if ( JsonReq.isMember("changeInPercent") ) {
			portfolio_instance.changeInPercent = JsonReq.get("changeInPercent", 0 ).asInt();
			portfolio_instance.SET_VALID_BIT_CHANGEINPERCENT();
		}

		primaryKey.push_back (portfolio_instance.companySymbol);

		/* range check() */
		errCode = portfolio_instance.rangeCheck();
		if (  1  && ( errCode != PORTFOLIO_COMPANYSYMBOL_RANGE_ERROR )  && ( errCode != PORTFOLIO_COMPANYNAME_RANGE_ERROR )  && ( errCode != PORTFOLIO_LASTTRADEPRICEONLY_RANGE_ERROR )  && ( errCode != PORTFOLIO_CHANGE_RANGE_ERROR )  && ( errCode != PORTFOLIO_CHANGEINPERCENT_RANGE_ERROR )  ) {

			/* sql_exec() */
			switch(jsonrpc_action) {
			case PORTFOLIO_INSERT : (void)portfolio_instance.db_insert_stmt_pre(); execStmt =  portfolio_instance.db_insert_stmt(); break;
			case PORTFOLIO_UPDATE : (void)portfolio_instance.db_update_stmt_pre(); execStmt =  portfolio_instance.db_update_stmt(portfolio_instance.companySymbol); break;
			case PORTFOLIO_DELETE : (void)portfolio_instance.db_delete_stmt_pre(); execStmt =  portfolio_instance.db_delete_stmt(portfolio_instance.companySymbol); break;
			case PORTFOLIO_SELECT : (void)portfolio_instance.db_select_stmt_pre(); break;
			}
		}
		}
		break; 
	case STOCK_SELECT : 
        {
            if ( JsonReq.isMember("keys") ) {
                Json::Value JsonKeyArray = JsonReq.get("keys",0);
                if ( JsonKeyArray.size() > 0 ) 
                    for(unsigned int i=0; i < JsonKeyArray.size(); ++i) 
                        primaryKey.push_back( JsonKeyArray[i].asString() );
            }
        }

		break; 
	case STOCK_INSERT :  
	case STOCK_UPDATE :  
	case STOCK_DELETE :  { 
		/* extract value from Json::Value */
		Stock stock_instance;
		if ( JsonReq.isMember("companySymbol") ) {
			stock_instance.companySymbol = JsonReq.get("companySymbol", "S&P").asString();
			stock_instance.SET_VALID_BIT_COMPANYSYMBOL();
		}

		if ( JsonReq.isMember("companyName") ) {
			stock_instance.companyName = JsonReq.get("companyName", "").asString();
			stock_instance.SET_VALID_BIT_COMPANYNAME();
		}

		if ( JsonReq.isMember("lastTradePriceOnly") ) {
			stock_instance.lastTradePriceOnly = JsonReq.get("lastTradePriceOnly", 0 ).asInt();
			stock_instance.SET_VALID_BIT_LASTTRADEPRICEONLY();
		}

		if ( JsonReq.isMember("change") ) {
			stock_instance.change = JsonReq.get("change", 0 ).asInt();
			stock_instance.SET_VALID_BIT_CHANGE();
		}

		if ( JsonReq.isMember("changeInPercent") ) {
			stock_instance.changeInPercent = JsonReq.get("changeInPercent", 0 ).asInt();
			stock_instance.SET_VALID_BIT_CHANGEINPERCENT();
		}

		primaryKey.push_back (stock_instance.companySymbol);

		/* range check() */
		errCode = stock_instance.rangeCheck();
		if (  1  && ( errCode != STOCK_COMPANYSYMBOL_RANGE_ERROR )  && ( errCode != STOCK_COMPANYNAME_RANGE_ERROR )  && ( errCode != STOCK_LASTTRADEPRICEONLY_RANGE_ERROR )  && ( errCode != STOCK_CHANGE_RANGE_ERROR )  && ( errCode != STOCK_CHANGEINPERCENT_RANGE_ERROR )  ) {

			/* sql_exec() */
			switch(jsonrpc_action) {
			case STOCK_INSERT : (void)stock_instance.db_insert_stmt_pre(); execStmt =  stock_instance.db_insert_stmt(); break;
			case STOCK_UPDATE : (void)stock_instance.db_update_stmt_pre(); execStmt =  stock_instance.db_update_stmt(stock_instance.companySymbol); break;
			case STOCK_DELETE : (void)stock_instance.db_delete_stmt_pre(); execStmt =  stock_instance.db_delete_stmt(stock_instance.companySymbol); break;
			case STOCK_SELECT : (void)stock_instance.db_select_stmt_pre(); break;
			}
		}
		}
		break; 
	case COMPANY_SELECT : 
        {
            if ( JsonReq.isMember("keys") ) {
                Json::Value JsonKeyArray = JsonReq.get("keys",0);
                if ( JsonKeyArray.size() > 0 ) 
                    for(unsigned int i=0; i < JsonKeyArray.size(); ++i) 
                        primaryKey.push_back( JsonKeyArray[i].asString() );
            }
        }

		break; 
	case COMPANY_INSERT :  
	case COMPANY_UPDATE :  
	case COMPANY_DELETE :  { 
		/* extract value from Json::Value */
		Company company_instance;
		if ( JsonReq.isMember("companySymbol") ) {
			company_instance.companySymbol = JsonReq.get("companySymbol", "S&P").asString();
			company_instance.SET_VALID_BIT_COMPANYSYMBOL();
		}

		if ( JsonReq.isMember("companyName") ) {
			company_instance.companyName = JsonReq.get("companyName", "").asString();
			company_instance.SET_VALID_BIT_COMPANYNAME();
		}

		if ( JsonReq.isMember("MarketValue") ) {
			company_instance.MarketValue = JsonReq.get("MarketValue", 0 ).asInt();
			company_instance.SET_VALID_BIT_MARKETVALUE();
		}

		if ( JsonReq.isMember("CEO") ) {
			company_instance.CEO = JsonReq.get("CEO", "").asString();
			company_instance.SET_VALID_BIT_CEO();
		}

		if ( JsonReq.isMember("industry") ) {
			company_instance.industry = JsonReq.get("industry", "").asString();
			company_instance.SET_VALID_BIT_INDUSTRY();
		}

		primaryKey.push_back (company_instance.companySymbol);

		/* range check() */
		errCode = company_instance.rangeCheck();
		if (  1  && ( errCode != COMPANY_COMPANYSYMBOL_RANGE_ERROR )  && ( errCode != COMPANY_COMPANYNAME_RANGE_ERROR )  && ( errCode != COMPANY_MARKETVALUE_RANGE_ERROR )  && ( errCode != COMPANY_CEO_RANGE_ERROR )  && ( errCode != COMPANY_INDUSTRY_RANGE_ERROR )  ) {

			/* sql_exec() */
			switch(jsonrpc_action) {
			case COMPANY_INSERT : (void)company_instance.db_insert_stmt_pre(); execStmt =  company_instance.db_insert_stmt(); break;
			case COMPANY_UPDATE : (void)company_instance.db_update_stmt_pre(); execStmt =  company_instance.db_update_stmt(company_instance.companySymbol); break;
			case COMPANY_DELETE : (void)company_instance.db_delete_stmt_pre(); execStmt =  company_instance.db_delete_stmt(company_instance.companySymbol); break;
			case COMPANY_SELECT : (void)company_instance.db_select_stmt_pre(); break;
			}
		}
		}
		break; 